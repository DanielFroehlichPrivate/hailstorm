- block:
    - name: get networks
      shell: . ~/overcloudrc_v3 && openstack network list --long --column Name --column ID --column Project -f json
      register: networks
      changed_when: false

    - name: create services network (in admin project)
      shell: >
        . ~/overcloudrc_v3 &&
        neutron net-create services --router:external --provider:network_type flat --provider:physical_network datacentre &&
        neutron subnet-create --name sub_services --disable-dhcp --allocation-pool=start={{ infrastructure_network_services.floating_start }},end={{ infrastructure_network_services.floating_end }} --gateway={{ infrastructure_network_services.default_gw_host_prefix | ipaddr('address') }} services {{ infrastructure_network_services.default_gw_host_prefix | ipaddr('network') }}/{{ infrastructure_network_services.default_gw_host_prefix | ipaddr('prefix') }}
      when: '"services" not in networks.stdout | from_json | map(attribute="Name") | list'

    - name: create guests aka external aka public network (in admin project)
      shell: >
        . ~/overcloudrc_v3 &&
        neutron net-create guests --router:external --provider:network_type flat --provider:physical_network guests &&
        neutron subnet-create --name sub_guests --disable-dhcp --allocation-pool=start={{ infrastructure_network_guests.floating_start }},end={{ infrastructure_network_guests.floating_end }} --gateway={{ infrastructure_network_guests.default_gw_host_prefix | ipaddr('address') }} guests {{ infrastructure_network_guests.default_gw_host_prefix | ipaddr('network') }}/{{ infrastructure_network_guests.default_gw_host_prefix | ipaddr('prefix') }}
      when: '"guests" not in networks.stdout | from_json | map(attribute="Name") | list'

    - name: create internal network
      shell: >
        . ~/overcloudrc_v3 &&
        openstack network create --internal --project-domain hailstorm --project {{ item }} internal_{{ item }}
      when: '"internal_{{ item }}" not in networks.stdout | from_json | map(attribute="Name") | list'
      with_items: "{{ osp_projects }}"

    - name: create internal sub-network
      shell: >
        . ~/overcloudrc_v3 &&
        openstack subnet create sub_internal_{{ item }} --network internal_{{ item }} --project-domain hailstorm --project {{ item }} --dhcp --gateway 172.20.0.1 --dns-nameserver={{ infrastructure_network_guests.dns_server }} --subnet-range 172.20.0.0/16
      when: '"internal_{{ item }}" not in networks.stdout | from_json | map(attribute="Name") | list'
      with_items: "{{ osp_projects }}"

    - name: get existing routers
      shell: >
        . ~/overcloudrc_v3 &&
        openstack router list -f json --project {{ item }} --project-domain hailstorm
      register: routers
      changed_when: false
      with_items: "{{ osp_projects }}"

    - name: create routers
      shell: >
        . ~/overcloudrc_v3 &&
        openstack router create --project {{ item.item }} --project-domain hailstorm router_internal_{{ item.item }}
      when: '"router_internal_{{ item.item }}" not in item.stdout | from_json | map(attribute="Name") | list'
      with_items: "{{ routers.results }}"

    - name: set gateway on router
      shell: >
        . ~/overcloudrc_v3 &&
        openstack router set --external-gateway guests router_internal_{{ item.item }}
      when: '"router_internal_{{ item.item }}" not in item.stdout | from_json | map(attribute="Name") | list'
      with_items: "{{ routers.results }}"

    - name: add interface to internal
      shell: >
        . ~/overcloudrc_v3 &&
        openstack router add subnet router_internal_{{ item.item }} sub_internal_{{ item.item }}
      when: '"router_internal_{{ item.item }}" not in item.stdout | from_json | map(attribute="Name") | list'
      with_items: "{{ routers.results }}"
  become: yes
  become_user: "{{ rhosp_stack_user }}"

# it can happen that the destroy script runs mulitple times, then RHEV is gone and we still attempt to start the VM
- name: ensure that RHEV is reachable
  shell: curl -k https://{{ hostvars['rhevm'].vm_nics[0].ip }}/ || true
  register: rhevm_response
  changed_when: false
  delegate_to: "{{ infrastructure_delegate_host_used_to_test_if_layer2_host_is_available }}"

- name: find existing VM
  shell: >
    {{ hostvars['rhevm'].ovirt_shell_command }} -E 'list vms --query name={{ inventory_hostname_short }}' |
    awk '/^id/ { print $3 }'
  register: vm_id
  delegate_to: rhevm
  changed_when: false
  when: rhevm_response.stdout|length > 0

- set_fact:
    vm_exists: "{{ rhevm_response.stdout|length > 0 and vm_id.stdout|length > 0 }}"

- name: get VM state
  shell: >
    {{ hostvars['rhevm'].ovirt_shell_command }} -E "show vm {{ vm_id.stdout }}" |
    awk '/^status-state/ { print $3 }'
  register: vm_state
  delegate_to: rhevm
  when: vm_exists

- name: start VM
  shell: >
    {{ hostvars['rhevm'].ovirt_shell_command }} -E "action vm {{ vm_id.stdout }} start"
  delegate_to: rhevm
  when: vm_exists and vm_state.stdout != "up"

- name: wait for VM to become avialable
  wait_for: host={{ ansible_host }} port=22 timeout=600
  delegate_to: "{{ infrastructure_delegate_host_used_to_test_if_layer2_host_is_available }}"
  when: vm_exists and vm_id.stdout != "up"

- name: find existing VM
  shell: >
    {{ hostvars['rhevm'].ovirt_shell_command }} -E 'list vms --query name={{ inventory_hostname_short }}' |
    awk '/^id/ { print $3 }'
  register: vm_id
  delegate_to: rhevm
  changed_when: false
- block:
    - name: stop VM
      ovirt:
        user: admin@internal
        url: "https://localhost{% if current_lifecycle_env.rhv_version == 4 %}/ovirt-engine{% endif %}"
        instance_name: "{{ inventory_hostname_short }}"
        password: "{{ root_password }}"
        state: shutdown

    - name: wait for VM to shut down
      shell: >
        {% if current_lifecycle_env.rhv_version == 4 %}ovirt-shell{% else %}rhevm-shell{% endif %} -E 'show vm {{ inventory_hostname_short }}' |
        awk '/^status-state/{print $3}'
      changed_when: false
      register: vm_status
      until: vm_status.stdout == 'down'
      failed_when: vm_status.stdout == ''
      retries: 30
      delay: 10

    - name: remove VM
      ovirt:
        user: admin@internal
        url: "https://localhost{% if current_lifecycle_env.rhv_version == 4 %}/ovirt-engine{% endif %}"
        instance_name: "{{ inventory_hostname_short }}"
        password: "{{ root_password }}"
        state: absent
  delegate_to: rhevm
  when: vm_id.stdout != ''
